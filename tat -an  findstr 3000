[33ma3c1c9f[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Implement dynamic product mapping from database - Added database connection to cart API - Created getProductInfo function to fetch real product data from database - Cart API now looks up products by UUID first, then by name - Fallback to hardcoded mapping if database lookup fails - Homepage now uses product.id directly for database lookup - All existing and future products will work automatically - Database connection properly closed after each request
[33m6933011[m Fix cart state synchronization issues - Removed hasLoadedCart ref to allow cart reloading on user changes - Added debug logs for cart operations - Fixed cart clearing to immediately update local state - Ensured cart count updates properly in header after cart operations - Cart now properly refreshes when user logs in/out or profile changes
[33m59c39cd[m Fix product mapping and cart integration issues - Added proper productId mapping in homepage for real product names - Fixed cart API DELETE method to handle both query params and request body - Added debug logs to track cart operations and product mapping - Ensured real product data flows correctly from cart to orders - Fixed Body Panel - Front Bumper product mapping issue
[33m4ba5006[m Fix cart integration to use real product data - Updated cart API to map product names to real product information - Modified homepage product cards to send product name as productId - Added proper product mapping for Fuel Filter, Hydraulic Hose, Body Panel, Tire Set - Cart now stores real product names, prices, SKUs, and categories - Orders API will now receive real cart data instead of mock data
[33m51f458f[m Fix TypeScript error in admin orders page - Changed user?.role !== 'ADMIN' to !user?.isAdmin to match User interface
